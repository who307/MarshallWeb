[{"C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Home.js":"1","C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Header.js":"2","C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\index.js":"3","C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Footer.js":"4","C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Country.js":"5","C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Speakers\\Speakers.js":"6"},{"size":7144,"mtime":1610943355658,"results":"7","hashOfConfig":"8"},{"size":7349,"mtime":1611340360905,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1608548663814,"results":"10","hashOfConfig":"8"},{"size":5778,"mtime":1613878167911,"results":"11","hashOfConfig":"8"},{"size":5078,"mtime":1613887732266,"results":"12","hashOfConfig":"8"},{"size":14251,"mtime":1612346073591,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9roxrv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Home.js",[],["28","29"],"C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Header.js",["30","31"],"C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\index.js",[],"C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Footer.js",["32"],"C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Country.js",["33"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { faChevronDown, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport \"../CSS/Country.css\"\r\n\r\nexport default function Coutry(props) {\r\n\r\n  let [dropMenu, setDropMenu] = useState({\r\n    country: \"SOUTH KOREA\",\r\n    language: \"ENGLISH\"\r\n  })\r\n\r\n  // 드롭메뉴 CountrySelect 온오프\r\n  let [openCountry, setOpenCountry] = useState();\r\n  const countryOpenFunc = () => {\r\n    if (!openCountry) {\r\n      setOpenCountry(true);\r\n    } else {\r\n      setOpenCountry(false);\r\n    }\r\n  }\r\n  // 드롭메뉴 LanguageSelect 온오프\r\n  let [openLang, setOpenLang] = useState();\r\n  const languageOpenFunc = () => {\r\n    if (!openLang) {\r\n      setOpenLang(true);\r\n    } else {\r\n      setOpenLang(false);\r\n    }\r\n  }\r\n\r\n  // 지역선택과 언어선택시 선택한 값으로 state변경\r\n  // 버튼태그에 onClick 함수 추가, name 속성 값 설정\r\n  useEffect(() => {\r\n\r\n    let buttonCountry = document.querySelectorAll(\".countryDropDown button, .languageDropDown button\")\r\n    // querySelectorAll 로 가져온 nodeList를 forEach문으로 해당 elements를 반환하고 onclick 이벤트 추가\r\n    buttonCountry.forEach((countryBtn) => {\r\n      countryBtn.onclick = (e) => {\r\n        const { name, value } = e.target;\r\n        setDropMenu({\r\n          ...dropMenu,\r\n          [name]: value\r\n        });\r\n        if (openCountry && !openLang) {\r\n          countryOpenFunc()\r\n        } else if (!openCountry && openLang) {\r\n          languageOpenFunc()\r\n        } else {\r\n          countryOpenFunc()\r\n          languageOpenFunc()\r\n        }\r\n      }\r\n      // forEach문으로 반환한 elements의 부모요소의 className의 따라 name 속성 값 설정\r\n      if(countryBtn.parentElement.className === \"countryDropDown\"){\r\n        countryBtn.name = \"country\"\r\n      }else if(countryBtn.parentElement.className === \"languageDropDown\"){\r\n        countryBtn.name = \"language\"\r\n      }\r\n    });\r\n  }, [openCountry, openLang]);\r\n\r\n\r\n  // Country 컴포넌트 close\r\n  const closeBtn = () => {\r\n    props.setOpenCountry(!props.openCountry);\r\n    if (openLang || openCountry) {\r\n      setOpenLang(false);\r\n      setOpenCountry(false);\r\n    }\r\n  }\r\n\r\n  const confirmBtn = () => {\r\n    props.setCountry(dropMenu)\r\n    props.setOpenCountry(!props.openCountry);\r\n    alert(`국가 : ${dropMenu.country} 언어 : ${dropMenu.language} 입니다.`)\r\n    if (openCountry && !openLang) {\r\n      countryOpenFunc()\r\n    } else if (!openCountry && openLang) {\r\n      languageOpenFunc()\r\n    } else if (openCountry && openLang) {\r\n      countryOpenFunc()\r\n      languageOpenFunc()\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"countryDiv\" style={props.openCountry ? {} : { height: \"0\" , visibility : \"hidden\"}}>\r\n      <FontAwesomeIcon className=\"_closeBtn\" onClick={closeBtn} icon={faTimes} />\r\n\r\n      <div className=\"countryWrap\">\r\n        <h2>SELECT COUNTRY AND LANGUAGE</h2>\r\n        <span>COUNTRY, SHIPPING DESTINATIONS AND FREIGHT COSTS ARE<br></br> DETERMINED BY YOUR COUNTRY SELECTION.</span>\r\n        <div className=\"selectDiv\">\r\n          <div className=\"selectCountry\">\r\n            <div className=\"selectWrap\" onClick={countryOpenFunc}>{dropMenu.country}\r\n              <FontAwesomeIcon style={openCountry ? { transform: \"rotate(180deg)\" } : { transform: \"rotate(0deg)\" }} icon={faChevronDown} />\r\n            </div>\r\n            <div className=\"countryDropDown\" style={openCountry ? { zIndex: \"99\" } : { display: \"none\" }}>\r\n              <button value=\"CANADA\">CANADA</button>\r\n              <button value=\"FRANCE\">FRANCE</button>\r\n              <button value=\"GERMANY\">GERMANY</button>\r\n              <button value=\"ITALY\">ITALY</button>\r\n              <button value=\"NETHERLANDS\">NETHERLANDS</button>\r\n              <button value=\"SOUTH KOREA\">SOUTH KOREA</button>\r\n              <button value=\"SPAIN\">SPAIN</button>\r\n              <button value=\"SWEDEN\">SWEDEN</button>\r\n              <button value=\"UNITED KINGDOM\">UNITED KINGDOM</button>\r\n              <button value=\"USA\">USA</button>\r\n              <button value=\"SHOW ALL\">SHOW ALL</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"selectLanguage\">\r\n            <div className=\"selectWrap\" onClick={languageOpenFunc}>{dropMenu.language}\r\n              <FontAwesomeIcon style={openLang ? { transform: \"rotate(180deg)\" } : { transform: \"rotate(0deg)\" }} icon={faChevronDown} />\r\n            </div>\r\n            <div className=\"languageDropDown\" style={openLang ? { zIndex: \"99\" } : { display: \"none\" }}>\r\n              <button value=\"ENGLISH\">ENGLISH</button>\r\n              <button value=\"SPANISH\">SPANISH</button>\r\n            </div>\r\n          </div>\r\n          <button onClick={confirmBtn} className=\"button\">CONFIRM</button>\r\n        </div>\r\n        <Link to=\"#\"><span>IF YOUR COUNTRY IS NOT VISIBLE IN THE LIST CLICK HERE TO VISIT OUR COUNTRY <br></br>DIRECTORY</span></Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\who30\\Desktop\\studying\\React-App\\marshallweb\\src\\Components\\Speakers\\Speakers.js",["34","35","36","37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":72,"column":74,"nodeType":"45","endLine":72,"endColumn":242},{"ruleId":"43","severity":1,"message":"44","line":124,"column":71,"nodeType":"45","endLine":124,"endColumn":239},{"ruleId":"43","severity":1,"message":"44","line":86,"column":17,"nodeType":"45","endLine":86,"endColumn":159},{"ruleId":"46","severity":1,"message":"47","line":62,"column":6,"nodeType":"48","endLine":62,"endColumn":29,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":23},{"ruleId":"50","severity":1,"message":"54","line":10,"column":23,"nodeType":"52","messageId":"53","endLine":10,"endColumn":39},{"ruleId":"50","severity":1,"message":"55","line":29,"column":17,"nodeType":"52","messageId":"53","endLine":29,"endColumn":27},{"ruleId":"46","severity":1,"message":"56","line":166,"column":3,"nodeType":"48","endLine":166,"endColumn":15,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":190,"column":46,"nodeType":"60","messageId":"61","endLine":190,"endColumn":48},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countryOpenFunc', 'dropMenu', and 'languageOpenFunc'. Either include them or remove the dependency array. You can also do a functional update 'setDropMenu(d => ...)' if you only need 'dropMenu' in the 'setDropMenu' call.","ArrayExpression",["64"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setCategoryTitle' is assigned a value but never used.","'setProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array. You can also do a functional update 'setFilterData(f => ...)' if you only need 'filterData' in the 'setFilterData' call.",["65"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [countryOpenFunc, dropMenu, languageOpenFunc, openCountry, openLang]",{"range":"70","text":"71"},"Update the dependencies array to be: [filterData, filterName]",{"range":"72","text":"73"},[1908,1931],"[countryOpenFunc, dropMenu, languageOpenFunc, openCountry, openLang]",[8121,8133],"[filterData, filterName]"]